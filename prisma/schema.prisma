generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id        Int      @id @default(autoincrement())  
  
  email     String   @unique
  name      String 
  password  String
  role      UserRole @default(USER)
  verified  DateTime

  cart             Cart?
  orders           Order[]
  vereficationCode VereficationCode?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id          Int      @id @default(autoincrement())

  name        String   @unique
  products    Product[]

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt    
}

model Product {
  id          Int      @id @default(autoincrement())

  categoryId  Int
  category Category @relation(fields: [categoryId], references: [id])
  
  name        String
  imageUrl    String
  
  ingredients Ingredient[]
  items ProductItem[]

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model ProductItem {
  id         Int      @id @default(autoincrement())

  price      Int
  size       Int?
  pizzaType  Int?

  product   Product @relation(fields: [productId], references: [id])
  productId Int

  cartItem CartItem[]
  
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

}

model Ingredient {
  id          Int      @id @default(autoincrement())

  name        String   @unique
  price       Int
  imageUrl    String
  
  products    Product[]
  cartItems   CartItem[]

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Cart {
  id          Int      @id @default(autoincrement())

  user        User? @relation(fields: [userId], references: [id])
  userId      Int @unique

  items       CartItem[]
  total       Int @default(0)
  token       String
  provider    String?
  providerId  String?

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model CartItem {
  id           Int      @id @default(autoincrement())

  productItemId Int
  productItem  ProductItem @relation(fields: [productItemId], references: [id])

  cartId       Int
  cart         Cart @relation(fields: [cartId], references: [id])

  quantity     Int
  ingredients  Ingredient[]
 
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
} 
 
model Order { 
  id           Int      @id @default(autoincrement())
 
  user         User? @relation(fields: [userId], references: [id])
  userId       Int?
 
  token        String
 
  items        Json
  total        Int
  status       OrderStatus
  paymentId    String?
 
  fullName     String
  email        String
  phone        String
  address      String
  comment      String?
 
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model VereficationCode {
  id           Int      @id @default(autoincrement())

  user         User @relation(fields: [userId], references: [id])
  userId       Int @unique

  code         String

  createdAt    DateTime @default(now())
}

enum OrderStatus {
  PENDING
  SUCCESS
  CANCLED
}

enum UserRole {
  USER
  ADMIN
}